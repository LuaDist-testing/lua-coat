#!/usr/bin/env lua

require 'lfs'

local files = {}
local nb_files_passed = 0
local nb_tests = 0
local nb_tests_passed = 0
local nb_asserts = 0
local t1 = os.time()


for file in lfs.dir('.') do
    if file:match '^Test%w+%.lua' or file:match '^%d+-[_%w]+%.lua' then
        table.insert(files, file)
    end
end
table.sort(files)
local nb_files = #files
for _, file in ipairs(files) do
    local cmd = 'lua ' .. file
    local f = io.popen(cmd)
    local st = 0
    for line in f:lines() do
        if line:match '^=+' or line:match '^-+' then
            st = st + 1
        else
            if st == 1 then
                print(file:sub(1, file:len() - 4))
            elseif st == 2 then
                print('  ' .. line)
            else
                local capt1, capt2 = line:match '^(%d+)/(%d+) test'
                if capt1 and capt2 then
                    nb_tests_passed = nb_tests_passed + tonumber(capt1)
                    nb_tests = nb_tests + tonumber(capt2)
                    if capt1 == capt2 then
                        nb_files_passed = nb_files_passed + 1
                    end
                else
                    local capt = line:match '^(%d+) total'
                    if capt then
                        nb_asserts = nb_asserts + tonumber(capt)
                    end
                end
            end
        end
    end
end

local t2 = os.time()
print(string.format("%d/%d Files (%.1f%%), %d/%d Tests (%.1f%%), %d Assertions, %d secs",
                    nb_files_passed,
                    nb_files,
                    100 * nb_files_passed / nb_files,
                    nb_tests_passed,
                    nb_tests,
                    100 * nb_tests_passed / nb_tests,
                    nb_asserts,
                    os.difftime(t2, t1)))

if nb_tests_passed == nb_tests then
    print "Result: PASS"
else
    print "Result: FAIL"
end

